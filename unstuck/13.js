window.habitlab_content_script = true;

(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[13],{

/***/ "./src/components/call-to-action-button.deps.js":
/*!******************************************************!*\
  !*** ./src/components/call-to-action-button.deps.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// this file was generated by scripts/generate_polymer_dependencies
// do not edit this file directly
// instead, edit the corresponding .html file and re-run the script
const {import_dom_modules} = __webpack_require__(/*! libs_frontend/dom_utils */ "./src/libs_frontend/dom_utils.ls")
__webpack_require__(/*! bower_components/habitlab-paper-button/habitlab-paper-button.deps.js */ "./src/bower_components/habitlab-paper-button/habitlab-paper-button.deps.js")
import_dom_modules(__webpack_require__(/*! components/call-to-action-button.html */ "./src/components/call-to-action-button.html"), 'components/call-to-action-button.html')
__webpack_require__(/*! components/call-to-action-button */ "./src/components/call-to-action-button.js")


/***/ }),

/***/ "./src/components/call-to-action-button.html":
/*!***************************************************!*\
  !*** ./src/components/call-to-action-button.html ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<link rel=import href=../bower_components/habitlab-paper-button/habitlab-paper-button.html> <habitlab-dom-module id=call-to-action-button> <template> <style>:host{display:var(--call-to-action-button-display,inline-block);min-height:var(--call-to-action-button-min-height,38px);width:var(--call-to-action-button-width);margin:var(--call-to-action-button-margin,0 0 0 0)}.call-to-action-button{cursor:pointer;color:var(--call-to-action-button-color,#fff);background-color:var(--call-to-action-button-bg-color,#415d67);margin:0 auto;width:100%;height:100%;box-shadow:var(--call-to-action-button-shadow,2px 2px 2px #888)}</style> <habitlab-paper-button class=call-to-action-button on-click=buttonClicked>{{buttonText}}</habitlab-paper-button> </template> <script src=call-to-action-button.js></script> </habitlab-dom-module>";

/***/ }),

/***/ "./src/components/call-to-action-button.js":
/*!*************************************************!*\
  !*** ./src/components/call-to-action-button.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

const {polymer_ext} = __webpack_require__(/*! libs_frontend/polymer_utils */ "./src/libs_frontend/polymer_utils.ls");
const {log_action} = __webpack_require__(/*! libs_frontend/intervention_log_utils */ "./src/libs_frontend/intervention_log_utils.ls")
const {
  get_intervention, 
  get_goal_info
} = __webpack_require__(/*! libs_common/intervention_info */ "./src/libs_common/intervention_info.ls")

const {
  close_tab_with_id
} = __webpack_require__(/*! libs_common/tab_utils */ "./src/generated_libs/libs_frontend/tab_utils.js")

const {
  get_tab_id
} = __webpack_require__ (/*! libs_common/intervention_info */ "./src/libs_common/intervention_info.ls")

polymer_ext({
  is: 'call-to-action-button',
  properties: {
    goal: {
      type: Object
    },
    buttonText: {
      type: String,
      computed: 'computeButtonText(goal)'
    }
  },
  ready: function() {
    this.goal = get_goal_info()
  },
  buttonClicked: function() {
    if (this.goal.is_positive) {
      log_action({'positive': 'habitlab-positive-goal-site-button clicked'})
      var domain = this.goal.domain
      if (domain.search("http") == -1) {
        domain = 'https://' + domain
      }
      window.location.href = domain
    } else {
      log_action({'positive': 'habitlab-close-tab-button clicked'})
      close_tab_with_id(get_tab_id()) 
    }
  },
  computeButtonText: function(goal) {
    if (goal.call_to_action != null) {
      // Should be max 21 characters
      return goal.call_to_action
    } else if (!goal.is_positive) {
      var sitename_printable = get_goal_info().sitename_printable
      return "Close " + sitename_printable
    } else {
      // Positive goal with no call to action text set -> just use its description for now
      return goal.description
    }
  }
});

/***/ })

}]);