window.habitlab_content_script = true;

(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[27],{

/***/ "./src/components/habitlab-purpose-banner.deps.js":
/*!***********************************************!*\
  !*** ./src/components/habitlab-purpose-banner.deps.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// this file was generated by scripts/generate_polymer_dependencies
// do not edit this file directly
// instead, edit the corresponding .html file and re-run the script
const {import_dom_modules} = __webpack_require__(/*! libs_frontend/dom_utils */ "./src/libs_frontend/dom_utils.ls")
__webpack_require__(/*! bower_components/polymer/polymer.deps.js */ "./src/bower_components/polymer/polymer.deps.js")
import_dom_modules(__webpack_require__(/*! components/habitlab-purpose-banner.html */ "./src/components/habitlab-purpose-banner.html"), 'components/habitlab-purpose-banner.html')
__webpack_require__(/*! components/habitlab-purpose-banner */ "./src/components/habitlab-purpose-banner.js")


/***/ }),

/***/ "./src/components/habitlab-purpose-banner.html":
/*!********************************************!*\
  !*** ./src/components/habitlab-purpose-banner.html ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<link rel=import href=../bower_components/polymer/polymer.html> <habitlab-dom-module id=habitlab-purpose-banner> <template> <style>:host{height:20px;font-size:20px;line-height:20px;width:100%;text-align:center;position:fixed;top:0;left:0;pointer-events:none;z-index:9007199254740991}#purposebannercontainer{height:20px;font-size:20px;line-height:20px;width:100%;text-align:center;position:fixed;top:0;left:0;pointer-events:none;z-index:9007199254740991}#purposebannermessagediv{background-color:#000;color:#fff;display:inline-block;cursor:default;opacity:1;padding:5px;border-bottom-left-radius:5px;border-bottom-right-radius:5px}</style> <div id=purposebannercontainer> <div id=purposebannermessagediv>Objective: {{purpose}} </div> </div> </template> <script src=habitlab-purpose-banner.js></script> </habitlab-dom-module>";

/***/ }),

/***/ "./src/components/habitlab-purpose-banner.js":
/*!******************************************!*\
  !*** ./src/components/habitlab-purpose-banner.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

const $ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
const {
  get_intervention
} = __webpack_require__(/*! libs_common/intervention_info */ "./src/libs_common/intervention_info.ls")

Polymer({
  is: 'habitlab-purpose-banner',
  properties: {
    purpose: {
      type: String,
      value: ""
    },
    sitename_printable: {
      type: String,
      value: (function() {
        let intervention_info = get_intervention()
        if (intervention_info.sitename_printable) {
          return intervention_info.sitename_printable
        }
        return 'this site'
      })()
    }
  },
  ready: function() {
    console.log('banner ready with purpose ' + this.purpose)
    let self = this
    let is_shown = true
    $(document).mousemove(function(evt) {
      let messagediv_offset = $(self.$.purposebannermessagediv).offset()
      let min_x = messagediv_offset.left
      let min_y = 0 // messagediv_offset.top
      let max_x = min_x + $(self.$.purposebannermessagediv).width()
      let max_y = min_y + $(self.$.purposebannermessagediv).height()
      let x = evt.clientX
      let y = evt.clientY
      let prev_is_shown = is_shown
      if (min_x <= x && x <= max_x && min_y <= y && y <= max_y) {
        is_shown = false
      } else {
        is_shown = true
      }
      if (prev_is_shown != is_shown) {
        if (is_shown) {
          $(self.$.purposebannermessagediv).css({
            opacity: 1
          })
        } else {
          $(self.$.purposebannermessagediv).css({
            opacity: 0
          })
        }
      }
    })
  }
})

/***/ }),

/***/ "./src/components/habitlab-show-timer-banner.deps.js":
/*!**************************************************!*\
  !*** ./src/components/habitlab-show-timer-banner.deps.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// this file was generated by scripts/generate_polymer_dependencies
// do not edit this file directly
// instead, edit the corresponding .html file and re-run the script
const {import_dom_modules} = __webpack_require__(/*! libs_frontend/dom_utils */ "./src/libs_frontend/dom_utils.ls")
__webpack_require__(/*! bower_components/polymer/polymer.deps.js */ "./src/bower_components/polymer/polymer.deps.js")
import_dom_modules(__webpack_require__(/*! components/habitlab-show-timer-banner.html */ "./src/components/habitlab-show-timer-banner.html"), 'components/habitlab-show-timer-banner.html')
__webpack_require__(/*! components/habitlab-show-timer-banner */ "./src/components/habitlab-show-timer-banner.js")


/***/ }),

/***/ "./src/components/habitlab-show-timer-banner.html":
/*!***********************************************!*\
  !*** ./src/components/habitlab-show-timer-banner.html ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<link rel=import href=../bower_components/polymer/polymer.html> <habitlab-dom-module id=habitlab-show-timer-banner> <template> <style>:host{height:20px;font-size:20px;line-height:20px;width:100%;text-align:center;position:fixed;top:0;left:0;pointer-events:none;z-index:9007199254740991}#showtimerbannercontainer{height:20px;font-size:20px;line-height:20px;width:100%;text-align:center;position:fixed;top:0;left:0;pointer-events:none;z-index:9007199254740991}#showtimerbannermessagediv{background-color:#000;color:#fff;display:inline-block;cursor:default;opacity:1;padding:5px;border-bottom-left-radius:5px;border-bottom-right-radius:5px}</style> <div id=showtimerbannercontainer> <div id=showtimerbannermessagediv>You've been on {{sitename_printable}} for {{duration}} today</div> </div> </template> <script src=habitlab-show-timer-banner.js></script> </habitlab-dom-module>";

/***/ }),

/***/ "./src/components/habitlab-show-timer-banner.js":
/*!*********************************************!*\
  !*** ./src/components/habitlab-show-timer-banner.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

const $ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");

const {
  printable_time_spent_long
} = __webpack_require__(/*! libs_common/time_utils */ "./src/libs_common/time_utils.ls")

const {
  get_seconds_spent_on_current_domain_today
} = __webpack_require__(/*! libs_common/time_spent_utils */ "./src/libs_common/time_spent_utils.ls");

const {
  get_intervention
} = __webpack_require__(/*! libs_common/intervention_info */ "./src/libs_common/intervention_info.ls")

Polymer({
  is: 'habitlab-show-timer-banner',
  properties: {
    duration: {
      type: Number,
      value: 0
    },
    sitename_printable: {
      type: String,
      value: (function() {
        let intervention_info = get_intervention()
        if (intervention_info.sitename_printable) {
          return intervention_info.sitename_printable
        }
        return 'this site'
      })()
    }
  },
  ready: function() {
    console.log('habitlab-show-timer-banner ready')
    let self = this
    let is_shown = true
    let update_time = function() {
      get_seconds_spent_on_current_domain_today().then(function(seconds_spent) {
        self.duration = printable_time_spent_long(seconds_spent)
      });
    }
    update_time()
    setInterval(update_time, 1000)
    $(document).mousemove(function(evt) {
      let messagediv_offset = $(self.$.showtimerbannermessagediv).offset()
      let min_x = messagediv_offset.left
      let min_y = 0 // messagediv_offset.top
      let max_x = min_x + $(self.$.showtimerbannermessagediv).width()
      let max_y = min_y + $(self.$.showtimerbannermessagediv).height()
      let x = evt.clientX
      let y = evt.clientY
      let prev_is_shown = is_shown
      if (min_x <= x && x <= max_x && min_y <= y && y <= max_y) {
        is_shown = false
      } else {
        is_shown = true
      }
      if (prev_is_shown != is_shown) {
        if (is_shown) {
          $(self.$.showtimerbannermessagediv).css({
            opacity: 1
          })
        } else {
          $(self.$.showtimerbannermessagediv).css({
            opacity: 0
          })
        }
      }
    })
  }
})

/***/ })

}]);